% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gibbs_zinmf.R
\name{gibbs_zinmf}
\alias{gibbs_zinmf}
\title{Gibbs Sampler for Zero-Inflated Bayesian Infinite Multi-Study NMF}
\usage{
gibbs_zinmf(
  M_s,
  x_s = NULL,
  K = 10,
  L = 5,
  niter = 2000,
  burnin = 10000,
  thin = 10,
  priors = initialize_zinmf()
)
}
\arguments{
\item{M_s}{A list of length \eqn{S}, containing counts matrices of dimensions \eqn{P \times N_s}.}

\item{x_s}{A list of length \eqn{S}, containing covariate matrices of dimensions \eqn{N_s \times D_s}, where \eqn{D_s} is the number of covariates in study s. If no covariates are provided, an intercept will be used for each study.}

\item{K}{The maximum number of patterns. Default is 10.}

\item{L}{The maximum number of clusters within pattern scores. Default is 5.}

\item{niter}{The number of posterior samples. Default is 2000.}

\item{burnin}{The number of burnin samples. Default is 10000.}

\item{thin}{Interval between saved samples. Default is 10.}

\item{priors}{A list containing the hyperparameter values generated from \code{initialize_zinmf}.}
}
\value{
A list containing posterior samples.  The components of the list are:
\item{W}{A tensor of dimension \eqn{P \times K \times niter/thin.}}
\item{H}{A list of length S, each item containing a tensor of dimension \eqn{K \times N_s \times niter/thin}.}
\item{A}{A list of length S, each item containing a tensor of dimension \eqn{P \times N_s \times niter/thin}.}
\item{PI}{A list of length S, each item containing a matrix of dimension \eqn{P\times niter/thin}.}
\item{D}{A list of length S, each item containing a tensor of dimension \eqn{K \times N_s \times L \times niter/thin}.}
\item{Theta}{A tensor of dimension \eqn{K \times L \times niter/thin}.}
\item{Beta}{A list of length S, each item containing a tensor of dimension \eqn{K \times L \times Q_s \times niter/thin}.}
}
\description{
The function implements the gibbs sampler described in Hansen et al. (2025+)
The code will return samples from the posterior distribution.
}
\examples{
\dontrun{
# Generate Data
S <- 3
P <- 20
K <- 5
N_s <- c(50, 60, 70)

W <- matrix(rgamma(P*K, shape=1, scale=2), nrow=P, ncol=K)
H_s <- lapply(1:S, function(s){matrix(rgamma(K*N_s[s], shape=10, rate=10/20), nrow=K, ncol=N_s[s])})
M_s <- lapply(1:S, function(s) matrix(rpois(N_s[s]*P, W \%*\% H_s[[s]], nrow=K, ncol=N_s[s]))

# Run CAVI
gibbs_zinmf(M_s=M_s, K=5)
}

}
